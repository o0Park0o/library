{"entries":[{"timestamp":1735886874751,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function () {\n\t\n})"],[0,"\n"]],"start1":0,"start2":0,"length1":33,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,".md\""],[-1,",\n        \"custom.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":218,"start2":218,"length1":66,"length2":44}]},{"type":"added","filename":"custom.ts","value":"************************************************************\n    \"Parkone\" custom blocks, courtesy of Javier Piay(12 - 2017)\n        ************************************************************\nenum digit_value {\n    //% block=\"zero\"\n    zero,\n    //% block=\"one\"\n    one,\n    //% block=\"complement\"\n    com\n}\n\n//% weight=100 color=#610C04 icon=\"\\uf10c\"\nnamespace Parkwan {\n    //% blockId=\"id_pow\" block=\"%op1 | raised to %op2\"\n    export function fn_raiseto(base: number, exp: number): number {\n        return Math.pow(base, exp);\n    }\n\n    //% blockId=\"id_getbit\" block=\"get bit %op1 | in %op2\"\n    export function fn_getbit(pos: number, num: number): number {\n        return (num >> pos) & 1;\n    }\n\n    //% blockId=\"id_setbit\" block=\"set bit %op1 | in %op2 | to %d\"\n    export function fn_setbit(pos: number, num: number, dv: digit_value): number {\n        if (dv == digit_value.zero)\n            return num & ~(1 << pos);\n        else if (dv == digit_value.one)\n            return num | (1 << pos);\n        else\n            return num ^ (1 << pos);\n    }\n\n    let hex_arr = \"0123456789abcdef\";\n    let dec_num = 0;\n\n    //% blockId=\"id_hextodec\" block=\"convert hexadecimal %hex_num | to decimal\"\n    export function fn_hextodec(hex_num: string): number {\n        dec_num = 0;\n        for (let index = 0; index < hex_num.length; index++) {\n            let char = hex_num.charAt(hex_num.length - 1 - index);\n            for (let index2 = 0; index2 < 16; index2++) {\n                if (char == hex_arr.charAt(index2)) {\n                    dec_num += index2 * Math.pow(16, index);\n                    break;\n                }\n            }\n        }\n        return dec_num;\n    }\n\n    //% blockId=\"id_bintodec\" block=\"convert binary %bin_num | to decimal\"\n    export function fn_bintodec(bin_num: string): number {\n        dec_num = 0;\n        for (let index = 0; index < bin_num.length; index++) {\n            if (bin_num.charAt(bin_num.length - 1 - index) == '1') {\n                dec_num += Math.pow(2, index);\n            }\n        }\n        return dec_num;\n    }\n}"}]},{"timestamp":1735887071663,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[1,"************************************************************\n    \"Parkone\" custom blocks, courtesy of Javier Piay(12 - 2017)\n        ************************************************************\nenum digit_value {\n    //% block=\"zero\"\n    zero,\n    //% block=\"one\"\n    one,\n    //% block=\"complement\"\n    com\n}\n\n//% weight=100 color=#610C04 icon=\"\\uf10c\"\nnamespace Parkwan {\n    //% blockId=\"id_pow\" block=\"%op1 | raised to %op2\"\n    export function fn_raiseto(base: number, exp: number): number {\n        return Math.pow(base, exp);\n    }\n\n    //% blockId=\"id_getbit\" block=\"get bit %op1 | in %op2\"\n    export function fn_getbit(pos: number, num: number): number {\n        return (num >> pos) & 1;\n    }\n\n    //% blockId=\"id_setbit\" block=\"set bit %op1 | in %op2 | to %d\"\n    export function fn_setbit(pos: number, num: number, dv: digit_value): number {\n        if (dv == digit_value.zero)\n            return num & ~(1 << pos);\n        else if (dv == digit_value.one)\n            return num | (1 << pos);\n        else\n            return num ^ (1 << pos);\n    }\n\n    let hex_arr = \"0123456789abcdef\";\n    let dec_num = 0;\n\n    //% blockId=\"id_hextodec\" block=\"convert hexadecimal %hex_num | to decimal\"\n    export function fn_hextodec(hex_num: string): number {\n        dec_num = 0;\n        for (let index = 0; index < hex_num.length; index++) {\n            let char = hex_num.charAt(hex_num.length - 1 - index);\n            for (let index2 = 0; index2 < 16; index2++) {\n                if (char == hex_arr.charAt(index2)) {\n                    dec_num += index2 * Math.pow(16, index);\n                    break;\n                }\n            }\n        }\n        return dec_num;\n    }\n\n    //% blockId=\"id_bintodec\" block=\"convert binary %bin_num | to decimal\"\n    export function fn_bintodec(bin_num: string): number {\n        dec_num = 0;\n        for (let index = 0; index < bin_num.length; index++) {\n            if (bin_num.charAt(bin_num.length - 1 - index) == '1') {\n                dec_num += Math.pow(2, index);\n            }\n        }\n        return dec_num;\n    }\n}"]],"start1":0,"start2":0,"length1":0,"length2":2075}]}]},{"timestamp":1736305255734,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"custom.ts","patch":[{"diffs":[[-1,"//% weight=100 color=#610C04 icon=\"\\uf10c\"\nnamespace Parkwan {\n    // แสดง LED บน micro:bit เป็นรูปแบบเฉพาะ\n    //% blockId=\"id_showled\" block=\"show custom LED pattern\"\n    export function fn_showled(): void {\n        basic.showLeds(`\n            # . . . #\n            # . . . #\n            . . # . .\n            . . . . #\n            # # # # #\n        `);\n    }\n\n    // ทำงานซ้ำตลอดเวลา\n    //% blockId=\"id_forever\" block=\"run forever\"\n    export function fn_forever(): void {\n        basic.forever(function () {\n            fn_showled();\n        });\n    }\n}"]],"start1":0,"start2":0,"length1":559,"length2":0}]}]},{"timestamp":1736305256991,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"pe=\""],[-1,"device_forever\" id=\"nsFf]-C[/5$IG#)PuP4]\" x=\"0"],[1,"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225"],[0,"\" y=\""],[1,"2"],[0,"0\"><"]],"start1":87,"start2":87,"length1":59,"length2":85}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":247,"start2":247,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1735886874750,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"Library\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1736305255734,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"basic.forever(function () {\n\t\n})\n","README.md":"","custom.ts":"************************************************************\n    \"Parkone\" custom blocks, courtesy of Javier Piay(12 - 2017)\n        ************************************************************\nenum digit_value {\n    //% block=\"zero\"\n    zero,\n    //% block=\"one\"\n    one,\n    //% block=\"complement\"\n    com\n}\n\n//% weight=100 color=#610C04 icon=\"\\uf10c\"\nnamespace Parkwan {\n    //% blockId=\"id_pow\" block=\"%op1 | raised to %op2\"\n    export function fn_raiseto(base: number, exp: number): number {\n        return Math.pow(base, exp);\n    }\n\n    //% blockId=\"id_getbit\" block=\"get bit %op1 | in %op2\"\n    export function fn_getbit(pos: number, num: number): number {\n        return (num >> pos) & 1;\n    }\n\n    //% blockId=\"id_setbit\" block=\"set bit %op1 | in %op2 | to %d\"\n    export function fn_setbit(pos: number, num: number, dv: digit_value): number {\n        if (dv == digit_value.zero)\n            return num & ~(1 << pos);\n        else if (dv == digit_value.one)\n            return num | (1 << pos);\n        else\n            return num ^ (1 << pos);\n    }\n\n    let hex_arr = \"0123456789abcdef\";\n    let dec_num = 0;\n\n    //% blockId=\"id_hextodec\" block=\"convert hexadecimal %hex_num | to decimal\"\n    export function fn_hextodec(hex_num: string): number {\n        dec_num = 0;\n        for (let index = 0; index < hex_num.length; index++) {\n            let char = hex_num.charAt(hex_num.length - 1 - index);\n            for (let index2 = 0; index2 < 16; index2++) {\n                if (char == hex_arr.charAt(index2)) {\n                    dec_num += index2 * Math.pow(16, index);\n                    break;\n                }\n            }\n        }\n        return dec_num;\n    }\n\n    //% blockId=\"id_bintodec\" block=\"convert binary %bin_num | to decimal\"\n    export function fn_bintodec(bin_num: string): number {\n        dec_num = 0;\n        for (let index = 0; index < bin_num.length; index++) {\n            if (bin_num.charAt(bin_num.length - 1 - index) == '1') {\n                dec_num += Math.pow(2, index);\n            }\n        }\n        return dec_num;\n    }\n}","pxt.json":"{\n    \"name\": \"Library\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"custom.ts\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1736305319259}